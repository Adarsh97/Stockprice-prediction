(setf *random-state* (make-random-state t))
(setf ActWt (make-array '(5))) (dotimes (j 5) (setf (aref ActWt j) 1) )
(setf test (make-array '(5))) (dotimes (j 5) (setf (aref test j) 0) )
(setf temparray (make-array '(14)))
(setf PERM_VAL 2)
(setf m 0)
(setf n 0)

(setf VARIANCE 1414)

(setf PS_BEST (make-array '(5))) (dotimes (i 5) (setf (aref PS_BEST i) 1) )
(setf AW_BEST (make-array '(5))) (dotimes (i 5) (setf (aref AW_BEST i) 1) )

(defun Get_Variance(ActWt DS PS)

(setf testSize (truncate (* m .3)))

(setf z 0)
(setf y 0)
(setf storage 0)
(setf fstorage 0)
(setf tVARIANCE 0)

(dotimes (z testSize)
(setf fstorage 0)
(dotimes (y 5)
(setf storage (* (aref ActWt y) (expt (aref DS z y) (aref PS y)) ) )
(setf fstorage (+ fstorage storage))
)
(setf tVARIANCE (+ tVARIANCE (expt (- (aref DS z 6) fstorage) 2) ))

)
(return-from Get_Variance tVARIANCE)
)

(defun main()

(defparameter *p* (open "myfile.txt"))
(setf m (read *p*))
(setf n (read *p*))
(setf g (list m n ))
(setf DS (make-array g))
(dotimes (r m)
(dotimes (s n)
(setf (aref DS r s ) (read *p*))
)
)
(close *p*)

(normalize DS)
(setf AW (make-array '(14 5)))
(dotimes (i 14)
   (dotimes (j 5)
      (setf (aref AW i j) (/ (- (rand-val) 1000) 1000))
   )
)

(setf PS (make-array '(5)))
(dotimes (i 5) (setf (aref PS i) 1))
(setf OldActWt (make-array '(5)))
(dotimes (j 5) (setf (aref OldActWt j) (aref ActWt j)))

(dotimes (i 47)
(dotimes (j 5) (setf (aref OldActWt j) (aref ActWt j)) )
(if (< VARIANCE PERM_VAL) (return))
;;(Gen-Algo DS AW PS)
(Attrbt_Selector AW ActWt)

(setf VARIANCE (Get_Variance ActWt DS PS))
;;(Get_Limiter DS PERM_VAL)
;;(Best_Sofar VARIANCE PERM_VAL)
(Modify_PS PS ActWt OldActWt)
(print PS)
)

)

(defun Modify_PS(PS ActWt OldActWt)
(dotimes (j 5)
(setf (aref OldActWt j) (- (aref OldActWt j) (aref ActWt j)))
)
(setf max -9999)
(setf min 9999)
(setf minpos 0)
(setf maxpos 0)
(dotimes (j 5)
(setf oldmin min)
(if (< (aref OldActWt j) min) (setf min (aref OldActWt j)))
(if (/= oldmin min) (setf minpos j))
(setf oldmax max)
(if (> (aref OldActWt j) max) (setf max (aref OldActWt j)))
(if (/= oldmax max) (setf maxpos j))
)
(if (/= (aref PS minpos) 1) (setf (aref PS minpos) (- (aref PS minpos) 1)))
(setf (aref PS maxpos) (+ (aref PS maxpos) 1))
)

(defun rand-val()
(+ 0.0 (random 2415.0))
)

(defun normalize (DS)
(setf max 0)
(setf min 999999)
(setf h1 0)
(dotimes (h1 m)
(if (< (aref DS h1 5) min)
(setf min (aref DS h1 5))
)
(if (> (aref DS h1 5) max)
(setf max (aref DS h1 5))
)
)
(setf h1 0)
(dotimes (h1 m)
(setf (aref DS h1 5) (/ (- (aref DS h1 5) min) (- max min) ))
)
)

(defun Attrbt_Selector (AW ActWt)
(setf h1 0)
(setf h2 0)
(dotimes (h1 5)
(dotimes (h2 14)
(setf (aref temparray h2) (aref AW h2 h1))
)
(setf temparray (sort temparray #'<))
(setf medn (/ (+ (aref temparray 6) (aref temparray 7)) 2))
(setf h2 0)
(setf mean 0)
(dotimes (h2 14)
(setf mean (+ mean (aref temparray h2)))
)
(setf mean (/ mean 14))
(setf (aref ActWt h1) (- (* medn 3) (* 2 mean)))
)
)

(main)
